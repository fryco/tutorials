project(Library)

add_library(${PROJECT_NAME} Implementation/Library.cpp)

target_include_directories(${PROJECT_NAME} PUBLIC Interface PRIVATE Headers)

#################### ADD TEST
# GTest & GMock are here: https://github.com/google/googletest
# You can download it as a zip file and extract the content.
# You should have a structure like:
#
# googletest-master
#      |- googlemock 
#             ...
#      |- googletest
#             ...
#      |- CMakeLists.txt
#
# Note that there is CMakeLists.txt. So you can use CMake to compile it.
# Create a new folder 'Output' and enter to it:
#
# mkdir Output && cd Output
#
# Compile GTest and GMock:
#
# CMake ../ && make
#
# Install GTest and GMock in your machine: 
#
# sudo make install
#
# Now CMake would find GTest and GMock

# finding GTest is provided by CMake module
find_package(GTest)
# pthread is required by GMock
find_package(Threads)

# To find GMock I added CMake module: Code/CMakeSupport/FindGMock.CMake downloaded from https://github.com/triglav/CMake-findgmock.
# To find GMock, CMake is looking for FindGMock.CMake - prefix Find and extension CMake. 
# CMake is checking location in CMAKE_MODULE_PATH to find this file. 
# Therefore we need to update it. 
set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${${PROJECT_NAME}_SOURCE_DIR}/../CMakeSupport/")
find_package(GMock) 

# Sets a test target name
set(TEST_TARGET_NAME ${PROJECT_NAME}_test) 

# Creates a test program
add_executable(${TEST_TARGET_NAME} Tests/Test.cpp)

# Links the test program with GTest & GMock & pthread
target_link_libraries(${TEST_TARGET_NAME} PRIVATE ${GTEST_BOTH_LIBRARIES}  ${GMOCK_LIBRARIES} ${PROJECT_NAME} ${CMAKE_THREAD_LIBS_INIT})
target_include_directories(${TEST_TARGET_NAME} PRIVATE ${GTEST_INCLUDE_DIRS} PRIVATE ${GMOCK_INCLUDE_DIRS} PRIVATE Interface PRIVATE Headers)

# Adds a test program to a CMake test
add_test(NAME ${TEST_TARGET_NAME} COMMAND ${TEST_TARGET_NAME})


# Author: Marcin Serwach
# Tutorial: https://github.com/iblis-ms/tutorials/tree/master/Cpp/CMake
